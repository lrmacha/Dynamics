import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import re
from scipy.stats import f_oneway
import numpy as np

# Superscript conversion
superscript_map = str.maketrans("0123456789", "⁰¹²³⁴⁵⁶⁷⁸⁹")

def superscript_codons(label):
    if label == 'WT':
        return label
    parts = re.findall(r'[A-Za-z]+|\d+', label)
    return ''.join([
        parts[i].upper() if i % 2 == 0 else parts[i].translate(superscript_map)
        for i in range(len(parts))
    ])

# Data
data = {
    'WT':        [-90.603, -76.675, -62.747],
    'H148P':     [-86.168, -85.2021, -84.236],
    'H148A':     [-84.0843, -66.3143, -48.5443],
    'W149R':     [-77.516, -81.2264, -84.9364],
    'W149A':     [-69.552, -69.8835, -70.216],
    'H148PW149R':[-77.093, -88.4217, -99.749],
    'H148AW149A':[-59.643, -61.7823, -63.921],
}

# Format labels
original_labels = list(data.keys())
formatted_labels = [superscript_codons(label) for label in original_labels]

# DataFrame
df = pd.DataFrame(data)
df_melted = df.melt(var_name='Mutant', value_name='ΔG')
df_melted['Group'] = df_melted['Mutant'].apply(lambda x: 'WT' if x == 'WT' else 'Mutant')

# Reorder labels to put WT first
sorted_labels = ['WT'] + sorted([x for x in original_labels if x != 'WT'], key=lambda x: x)
formatted_sorted_labels = [superscript_codons(label) for label in sorted_labels]

# Summary statistics
means = df.mean()
sds = df.std()
stats = pd.DataFrame({
    'Mutant': [superscript_codons(k) for k in sorted_labels],
    'Mean (kcal/mol)': [f"{means[k]:.2f}" for k in sorted_labels],
    'SD (kcal/mol)': [f"{sds[k]:.2f}" for k in sorted_labels]
})

# ANOVA
groups = [df[col] for col in sorted_labels]
anova_stat, anova_p = f_oneway(*groups)

# Plotting
fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(10, 6), gridspec_kw={'width_ratios': [2.5, 1]})

# Barplot
sns.barplot(
    data=df_melted,
    x='Mutant',
    y='ΔG',
    order=sorted_labels,
    ax=ax1,
    errorbar='sd',
    palette=['white' if label == 'WT' else 'lightblue' for label in sorted_labels],
    edgecolor='black',
    linewidth=1.2
)

# Overlay data points
sns.stripplot(
    data=df_melted,
    x='Mutant',
    y='ΔG',
    order=sorted_labels,
    ax=ax1,
    color='black',
    size=8,  # larger points
    jitter=True,
    alpha=0.8
)

# X-axis formatting
ax1.set_xticks(range(len(formatted_sorted_labels)))
ax1.set_xticklabels(formatted_sorted_labels, rotation=0, fontsize=12)
ax1.set_ylabel('ΔG (kcal/mol)', fontsize=12)
ax1.set_xlabel('')
ax1.grid(False)  # remove gridlines

# WT mean reference line
wt_mean = df['WT'].mean()
ax1.axhline(wt_mean, linestyle='--', color='blue', linewidth=1.2)

# Remove title and legend
ax1.set_title('')
# ax1.legend()  # Not used

# Stats table on right
ax2.axis('off')
table = ax2.table(
    cellText=stats.values,
    colLabels=stats.columns,
    cellLoc='center',
    loc='center',
    colColours=['lightblue'] * 3
)
table.auto_set_font_size(False)
table.set_fontsize(11)  # Slightly smaller for entire table
table.scale(1, 2.2)

# Reduce column header font size separately
for col in range(len(stats.columns)):
    table[(0, col)].set_fontsize(7.5)

# ANOVA p-value under table
ax2.text(0.5, 0, f'Overall ANOVA p-value = {anova_p:.4f}', ha='center', va='top', fontsize=12, transform=ax2.transAxes)

plt.tight_layout()
plt.show()
